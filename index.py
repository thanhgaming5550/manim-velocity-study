from manim import *

def createText(content: str):
    return Text(content, font_size = 20, font="Noto Sans")

def gradientWhiteColor(n):
    return ImageMobject(np.uint8([[i * 256 / n for i in range(0, n)] for _ in range(0, n)]))

class Count(Animation):
    def __init__(self, number: DecimalNumber, start: float, end: float, **kwargs) -> None:
        # Pass number as the mobject of the animation
        super().__init__(number,  **kwargs)
        # Set start and end
        self.start = start
        self.end = end

    def interpolate_mobject(self, alpha: float) -> None:
        # Set value of DecimalNumber according to alpha
        value = self.start + (alpha * (self.end - self.start))
        self.mobject.set_value(value)

class Index(Scene):
    def construct(self):
        text = Text("Vận tốc", font_size=144, font="Noto Sans")
        goc = Line([-0.25, 0, 0], [0.25, 0, 0]).rotate(PI/2).shift(DOWN)
        line = Line([-6, 0, 0], [6, 0, 0]).shift(DOWN)
        text1 = Text("Vận tốc phụ thuộc vào chiều dương", font="Noto Sans", font_size=22).shift(UP)
        text2 = Text("Chọn vật mốc như hình, chiều dương theo chiều vectơ", font="Noto Sans", font_size=18).next_to(text1, DOWN*0.5)
        vatmoc = Text("Vật mốc", font_size = 20, font="Noto Sans").next_to(goc, DOWN*0.4)
        vector = Arrow(ORIGIN, [2, 0, 0]).shift(RIGHT * 5).shift(DOWN)
        congthuc = MathTex("V = \\frac{S}{t}").shift(UP * 2)
        vectext = Text("Chiều dương", font_size = 20, font="Noto Sans").next_to(vector, DOWN*0.5)
        text3 = Text("Công thức:", font_size = 25, font="Noto Sans").next_to(congthuc, LEFT)
        text4 = createText("Trong đó: ").next_to(congthuc, RIGHT)
        text5 = createText("V: Vận tốc").next_to(text4, RIGHT + UP*0.5)
        text6 = createText("S: Quãng đường").next_to(text4, RIGHT)
        text7 = createText("t: Thời gian").next_to(text4, RIGHT + DOWN*0.5)

        dv1 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(RIGHT * 1)
        dv2 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(RIGHT * 2)
        dv3 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(RIGHT * 3)
        dv4 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(RIGHT * 4)
        dv5 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(RIGHT * 5)
        dv11 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(RIGHT * 6)
        dv6 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(LEFT * 1)
        dv7 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(LEFT * 2)
        dv8 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(LEFT * 3)
        dv9 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(LEFT * 4)
        dv10 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(LEFT * 5)
        dv12 = Line([-0.05, 0, 0], [0.05, 0, 0]).rotate(PI/2).shift(DOWN).shift(LEFT * 6)
        donvi = Group(dv1, dv2, dv3, dv4, dv5, dv6, dv7, dv8, dv9, dv10, dv11, dv12)

        text8 = Text("t = ", font_size=40).next_to(line, DOWN*6 + LEFT*0.7)
        time = DecimalNumber().set_color(WHITE).next_to(text8, RIGHT)
        thoigian = Group(text8, time)

        dot = Dot(color=BLUE).shift(DOWN)
        text11 = createText("Tọa độ: ").next_to(goc, DOWN * 2 + LEFT*0.5)
        vitri = DecimalNumber().set_color(WHITE).next_to(text11, RIGHT*0.5)

        text13 = Text("S", color=YELLOW).shift(LEFT*4 + UP*0.5)
        text16 = Text(" = ", color=WHITE).next_to(text13, RIGHT)
        text15 = DecimalNumber().set_color(RED).next_to(text16, RIGHT)
        text17 = Text(" - ", color=WHITE).next_to(text15, RIGHT)
        text14 = DecimalNumber().set_color(GREEN).next_to(text17, RIGHT)
        text18 = Text(" = ", color=WHITE).next_to(text14, RIGHT*2)
        text19 = DecimalNumber().set_color(YELLOW).next_to(text18, RIGHT)
        dot1 = Dot(color=GREEN).shift(DOWN + LEFT * 4)
        dot2 = Dot(color=RED).shift(DOWN + LEFT * 4)
        line1 = Line()
        line1.add_updater(lambda z: z.become(Line(dot1.get_center(), dot2.get_center()).set_color(YELLOW)))

        text10 = createText("Nếu tọa độ điểm nằm cùng về phía với chiều dương thì nó dương và ngược lại").shift(UP)
        vectordoi = Arrow(ORIGIN, [-2, 0, 0]).next_to(line, UP*2).shift(LEFT)

        text12 = createText("Quãng đường (S) là khoảng cách từ vị trí (tọa độ) đầu đên vị trí (tọa độ) cuối").shift(UP*2 + LEFT*2)
        text20 = createText("hay nói cách khác là bằng vị trí (tọa độ) cuối trừ cho vị trí (tọa độ) đầu").shift(UP*1.5 + LEFT*2)

        text21 = createText("Thời gian (t) là thời gian chất điểm đi từ vị trí (tọa độ) đầu đến vị trí (tọa độ) cuối").shift(UP*2 + LEFT*2)

        self.wait(1)
        self.play(Write(text))
        self.wait(duration = 3)
        self.play(Transform(text, goc))
        self.play(Create(line))
        self.play(Create(text1))
        self.wait(duration = 1)
        self.play(Create(text2))
        self.wait(duration = 0.5)
        self.play(Create(vatmoc))
        self.play(Create(vector))
        self.play(Create(vectext))
        self.wait(duration=3)
        self.play(FadeOut(text1, text2, vectext, vatmoc), vector.animate.next_to(line, UP*2).shift(RIGHT))
        self.play(FadeIn(text3, congthuc))
        self.play(FadeIn(text4, text5, text6, text7))
        self.wait(duration=3)
        self.play(FadeOut(text3, text4, text5, text6, text7), congthuc.animate.next_to(line, UP*10).shift(RIGHT*5))
        self.play(FadeIn(donvi))
        self.play(FadeIn(dot, text11, vitri))
        self.wait(duration=1)

        self.play(dot.animate.shift(LEFT * 4), Count(vitri, 0, -4))
        self.wait(1)
        self.wait(1)
        self.play(dot.animate.shift(RIGHT * 7), Count(vitri, -4, 3))
        self.play(FadeIn(text10))
        self.wait(1)
        self.play(Transform(vector, vectordoi), Count(vitri, 3, -3))
        self.wait(1)
        self.play(dot.animate.shift(LEFT * 5), Count(vitri, -3, 2))
        self.wait(1)
        self.play(dot.animate.shift(LEFT * 2), Count(vitri, 2, 4))
        self.wait(1)
        self.play(Transform(vector, Arrow(ORIGIN, [2, 0, 0]).next_to(line, UP*2).shift(RIGHT)), Count(vitri, 4, -4))
        self.wait(1)
        self.play(dot.animate.shift(LEFT * 1), Count(vitri, -4, -5))
        self.wait(1)
        self.play(dot.animate.shift(RIGHT * 8), Count(vitri, -5, 3))
        self.wait(1)
        self.play(dot.animate.shift(RIGHT * 3), Count(vitri, 3, 6))
        self.wait(1)
        self.play(dot.animate.shift(LEFT * 6), Count(vitri, 6, 0), FadeOut(text10))
        self.play(FadeIn(text12))
        self.play(dot.animate.shift(LEFT * 4), Count(vitri, 0, -4), FadeIn(text20))
        self.play(FadeIn(text13, text16))
        self.play(FadeIn(dot1), Count(text14, 0, -4))
        self.wait(1)
        self.play(dot.animate.shift(RIGHT * 7), Count(vitri, -4, 3), Create(text17), FadeIn(line1), dot2.animate.shift(RIGHT * 7), Count(text15, 0, 3))
        self.wait(1)
        self.play(FadeIn(text18))
        self.play(Count(text19, 0, 7))
        self.wait(5)
        self.play(FadeOut(text13, text16, text15, text17, text14, text18, text19, text20, text12))
        self.wait(1)
        self.play(FadeIn(thoigian))
        self.play(FadeIn(text21))
        self.wait(3)
        self.play(dot.animate.shift(LEFT * 7), Count(vitri, 3, -4), Count(time, 0, 5), run_time=5)
        self.wait(3)
        self.play(FadeOut(text21))
        self.play(Count(time, 5, 0), run_time=0.3)
        self.wait(1)
        self.play(dot.animate.shift(RIGHT * 7), Count(vitri, -4, 3), Count(time, 0, 7), run_time=7)
        self.wait(3)
        self.play(FadeOut(line1, dot1, dot2))
        self.play(Count(time, 7, 0), dot.animate.shift(LEFT * 3), Count(vitri, 3, 0), run_time=0.3)
        self.wait(1)

        text13 = Text("S", color=YELLOW).shift(LEFT*4 + UP*0.5)
        text16 = Text(" = ", color=WHITE).next_to(text13, RIGHT)
        text15 = DecimalNumber().set_color(RED).next_to(text16, RIGHT)
        text17 = Text(" - ", color=WHITE).next_to(text15, RIGHT)
        text14 = DecimalNumber().set_color(GREEN).next_to(text17, RIGHT)
        text18 = Text(" = ", color=WHITE).next_to(text14, RIGHT*2)
        text19 = DecimalNumber().set_color(YELLOW).next_to(text18, RIGHT)
        dot1 = Dot(color=GREEN).shift(DOWN + LEFT * 2)
        dot2 = Dot(color=RED).shift(DOWN + RIGHT * 3)
        line1 = Line()
        line1.add_updater(lambda z: z.become(Line(dot1.get_center(), dot.get_center()).set_color(YELLOW)))

        text22 = createText("Giả sử điểm xuất phát là Vị trị thứ -2, điểm dừng là Vị trí thứ 3").shift(UP*2 + LEFT*2)
        self.play(FadeIn(text22))
        self.wait(1)
        text23 = createText("và thời gian di chuyển của chất điểm là 8s").shift(UP*1.5 + LEFT*2)
        self.play(FadeIn(dot1, dot2, text23))
        self.wait(2)
        self.play(FadeOut(text22, text23), dot.animate.shift(LEFT * 2), Count(vitri, 0, -2))
        text24 = Text("Ta sẽ có: ", font_size=31, font="Noto Sans").shift(UP*2 + LEFT*3)
        self.play(FadeIn(text24))
        self.play(FadeIn(text13, text16, text17))
        self.play(Count(text14, 0, -2))
        self.play(dot.animate.shift(RIGHT * 5), Count(vitri, -2, 3), Count(time, 0, 8), FadeIn(line1), run_time=8)
        self.play(Count(text15, 0, 3))
        self.play(FadeIn(text18))
        self.play(Count(text19, 0, 5))
        self.wait(3)
        self.play(FadeOut(text24, text16, text17, text15, text14), Group(text18, text19).animate.shift(LEFT * 3 + UP*1), text13.animate.shift(UP*1+RIGHT*0.5), thoigian.animate.next_to(goc, UP*4 + LEFT*7))
        gachphanso = Line(UP*1 + LEFT*4.3, UP*1 + LEFT*1.3)
        self.play(Create(gachphanso))
        text25 = Text(" = ", color=WHITE).next_to(gachphanso, RIGHT*0.5)
        text26 = DecimalNumber().set_color(WHITE).next_to(text25, RIGHT*0.5)
        self.play(Create(text25))
        self.play(Count(text26, 0, (5/8)))
        self.wait(3)
        text27 = Text("V ", font_size=40, font="Noto Sans").next_to(text25, LEFT*0.5)
        self.play(Transform(Group(text18, text19, text13, thoigian, gachphanso), text27))
        self.wait(1)
        self.play(Group(text25, text26, text27, Group(text18, text19, text13, thoigian, gachphanso)).animate.next_to(goc, UP*3.5))
        self.wait(5)
        self.play(FadeOut(line1))
        self.play(FadeOut(line, goc, text, donvi, Group(text18, text19, text13, thoigian, gachphanso), Group(text25, text26, text27), vector, dot1, dot2, text11, vitri, dot))
        self.play(congthuc.animate.next_to(goc, UP))
        self.wait(5)

        dot3 = Dot(color=YELLOW)
        self.play(Transform(congthuc, dot3))
        circle1 = Circle(radius=0.6, color=WHITE).shift(LEFT*3 + UP*3).set_fill(PINK, opacity=0.5)
        circle2 = Circle(radius=0.6, color=WHITE).shift(RIGHT*2 + UP*2).set_fill(PINK, opacity=0.5)
        circle3 = Circle(radius=0.6, color=WHITE).shift(LEFT*3 + UP*1).set_fill(PINK, opacity=0.5)
        circle4 = Circle(radius=0.6, color=WHITE).shift(RIGHT*2).set_fill(PINK, opacity=0.5)
        circle5 = Circle(radius=0.6, color=WHITE).shift(LEFT*3 + DOWN*1).set_fill(PINK, opacity=0.5)
        circle6 = Circle(radius=0.6, color=WHITE).shift(RIGHT*2 + DOWN*2).set_fill(PINK, opacity=0.5)
        self.play(FadeIn(circle1, circle2, circle3, circle4, circle5, circle6))
        self.play(congthuc.animate.move_to(circle1, LEFT+RIGHT+UP+DOWN), run_time=0.5)
        self.play(congthuc.animate.move_to(circle2, LEFT+RIGHT+UP+DOWN), circle1.animate.set_fill(BLUE, opacity=0.5), run_time=0.5)
        self.play(congthuc.animate.move_to(circle3, LEFT+RIGHT+UP+DOWN), circle2.animate.set_fill(BLUE, opacity=0.5), run_time=0.5)
        self.play(congthuc.animate.move_to(circle4, LEFT+RIGHT+UP+DOWN), circle3.animate.set_fill(BLUE, opacity=0.5), run_time=0.5)
        self.play(congthuc.animate.move_to(circle5, LEFT+RIGHT+UP+DOWN), circle4.animate.set_fill(BLUE, opacity=0.5), run_time=0.5)
        self.play(congthuc.animate.move_to(circle6, LEFT+RIGHT+UP+DOWN), circle5.animate.set_fill(BLUE, opacity=0.5), run_time=0.5)
        self.play(circle6.animate.set_fill(BLUE, opacity=0.5), run_time=0.5)

        self.play(FadeOut(congthuc))
        catch = Group(Rectangle(width=1.5, height=0.1), Rectangle(width=0.85, height=0.05).shift(DOWN*0.1)).shift(DOWN*(4-0.15)+LEFT*8)
        self.play(FadeIn(catch))
        self.play(catch.animate.shift(RIGHT*10))
        self.wait(0.5)
        self.play(circle6.animate.shift(DOWN*5), run_time=1)
        self.play(catch.animate.shift(LEFT*5))
        self.wait(0.5)
        self.play(circle5.animate.shift(DOWN*6), run_time=1)
        self.play(catch.animate.shift(RIGHT*5))
        self.wait(0.5)
        self.play(circle4.animate.shift(DOWN*6), run_time=1)
        self.play(catch.animate.shift(LEFT*5))
        self.wait(0.5)
        self.play(circle3.animate.shift(DOWN*7), run_time=1)
        self.play(catch.animate.shift(RIGHT*5))
        self.wait(0.5)
        self.play(circle2.animate.shift(DOWN*7), run_time=1)
        self.play(catch.animate.shift(LEFT*5))
        self.wait(0.5)
        self.play(circle1.animate.shift(DOWN*8), run_time=1)
        self.wait(0.5)
        self.play(catch.animate.shift(RIGHT*11))
        self.wait(3)

        line2 = Line([-12, 0, 0], [12, 0, 0]).shift(UP*3)
        line3 = Line([-12, 0, 0], [12, 0, 0]).shift(UP*1)
        clickcircle = Circle(radius=0.7, color=GRAY).shift(UP*2 + LEFT*5)
        self.play(Create(line2), Create(line3), FadeIn(clickcircle))
    
        taiko1 = Circle(radius=0.7, color=WHITE).shift(UP*2 + RIGHT*12).set_fill(RED, opacity=1)
        taiko2 = Circle(radius=0.5, color=WHITE).shift(UP*2 + RIGHT*12).set_fill(RED, opacity=1)
        taiko3 = Circle(radius=0.5, color=WHITE).shift(UP*2 + RIGHT*12).set_fill(BLUE, opacity=1)
        taiko4 = Circle(radius=0.5, color=WHITE).shift(UP*2 + RIGHT*12).set_fill(RED, opacity=1)
        taiko5 = Circle(radius=0.7, color=WHITE).shift(UP*2 + RIGHT*12).set_fill(BLUE, opacity=1)
        taiko6 = Circle(radius=0.7, color=WHITE).shift(UP*2 + RIGHT*12).set_fill(BLUE, opacity=1)

        self.play(FadeIn(taiko1, taiko2, taiko3, taiko4, taiko5, taiko6))
        self.play(taiko1.animate.shift(LEFT * 17))
        self.play(clickcircle.animate.set_fill(RED, opacity=0.4), run_time=0.1)
        self.play(taiko1.animate.shift(UP * 7), run_time=0.3)
        self.play(clickcircle.animate.set_fill(RED, opacity=0), run_time=0.1)
        self.play(taiko2.animate.shift(LEFT * 17))
        self.play(clickcircle.animate.set_fill(RED, opacity=0.4), run_time=0.1)
        self.play(taiko2.animate.shift(UP * 7), run_time=0.3)
        self.play(clickcircle.animate.set_fill(RED, opacity=0), run_time=0.1)
        self.play(taiko3.animate.shift(LEFT * 17))
        self.play(clickcircle.animate.set_fill(BLUE, opacity=0.4), run_time=0.1)
        self.play(taiko3.animate.shift(UP * 7), run_time=0.3)
        self.play(clickcircle.animate.set_fill(BLUE, opacity=0), run_time=0.1)
        self.play(taiko4.animate.shift(LEFT * 17))
        self.play(clickcircle.animate.set_fill(RED, opacity=0.4), run_time=0.1)
        self.play(taiko4.animate.shift(UP * 7), run_time=0.3)
        self.play(clickcircle.animate.set_fill(RED, opacity=0), run_time=0.1)
        self.play(taiko5.animate.shift(LEFT * 17))
        self.play(clickcircle.animate.set_fill(BLUE, opacity=0.4), run_time=0.1)
        self.play(taiko5.animate.shift(UP * 7), run_time=0.3)
        self.play(clickcircle.animate.set_fill(BLUE, opacity=0), run_time=0.1)
        self.play(taiko6.animate.shift(LEFT * 17))
        self.play(clickcircle.animate.set_fill(BLUE_D, opacity=0.4), run_time=0.1)
        self.play(taiko6.animate.shift(UP * 7), run_time=0.3)
        self.play(clickcircle.animate.set_fill(BLUE, opacity=0), run_time=0.1)
        self.wait(1)
        self.play(FadeOut(clickcircle, line2, line3))
        self.wait(3)

        mania1 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+RIGHT*3)
        mania2 = Rectangle(width=1, height=0.35).set_fill(WHITE, 0.7).shift(UP*7+RIGHT*2)
        mania3 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+RIGHT)
        mania4 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+LEFT)
        mania5 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+3*LEFT)
        mania6 = Rectangle(width=1, height=0.35).set_fill(YELLOW, 0.7).shift(UP*7)
        mania7 = Rectangle(width=1, height=0.35).set_fill(WHITE, 0.7).shift(UP*7+RIGHT*2)
        mania8 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+RIGHT)
        mania9 = Rectangle(width=1, height=0.35).set_fill(YELLOW, 0.7).shift(UP*7)
        mania10 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+RIGHT*3)
        mania11 = Rectangle(width=1, height=0.35).set_fill(WHITE, 0.7).shift(UP*7+2*LEFT)
        mania12 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+3*LEFT)
        mania13 = Rectangle(width=1, height=0.35).set_fill(PINK, 0.7).shift(UP*7+RIGHT)
        mania14 = Rectangle(width=1, height=0.35).set_fill(WHITE, 0.7).shift(UP*7+2*LEFT)

        maniaclick1 = Rectangle(width=1, height=2).set_fill(PINK, 1).shift(DOWN * 7)
        maniaclick2 = Rectangle(width=1, height=2).set_fill(WHITE, 1).shift(DOWN * 7)
        maniaclick3 = Rectangle(width=1, height=2).set_fill(PINK, 1).shift(DOWN * 7)
        maniaclick4 = Rectangle(width=1, height=2).set_fill(YELLOW, 1).shift(DOWN * 7)
        maniaclick5 = Rectangle(width=1, height=2).set_fill(PINK, 1).shift(DOWN * 7)
        maniaclick6 = Rectangle(width=1, height=2).set_fill(WHITE, 1).shift(DOWN * 7)
        maniaclick7 = Rectangle(width=1, height=2).set_fill(PINK, 1).shift(DOWN * 7)

        line4 = Line([0, 10, 0], [0, -10, 0]).shift(LEFT*3.5)
        line5 = Line([0, 10, 0], [0, -10, 0]).shift(RIGHT*3.5)

        image = gradientWhiteColor(256).rotate(-PI/2)
        image.width = 3
        image.height = 1
        
        light1 = image.copy().shift(DOWN*2.5 + LEFT*3)
        light2 = image.copy().shift(DOWN*2.5 + LEFT*2)
        light3 = image.copy().shift(DOWN*2.5 + LEFT*1)
        light4 = image.copy().shift(DOWN*2.5)
        light5 = image.copy().shift(DOWN*2.5 + RIGHT*1)
        light6 = image.copy().shift(DOWN*2.5 + RIGHT*2)
        light7 = image.copy().shift(DOWN*2.5 + RIGHT*3)

        self.play(FadeIn(maniaclick1, maniaclick2, maniaclick3, maniaclick4, maniaclick5, maniaclick6, maniaclick7))
        self.play(maniaclick1.animate.shift(UP*3), maniaclick2.animate.shift(UP*3), maniaclick3.animate.shift(UP*3), maniaclick4.animate.shift(UP*3), maniaclick5.animate.shift(UP*3), maniaclick6.animate.shift(UP*3), maniaclick7.animate.shift(UP*3))
        self.play(maniaclick1.animate.shift(LEFT*3), maniaclick2.animate.shift(LEFT*2), maniaclick3.animate.shift(LEFT), maniaclick5.animate.shift(RIGHT), maniaclick6.animate.shift(RIGHT*2), maniaclick7.animate.shift(RIGHT*3))
        self.play(Create(line4), Create(line5))

        self.play(mania1.animate.next_to(maniaclick7, DOWN), FadeIn(light7), run_time=0.5)
        self.play(mania2.animate.next_to(maniaclick6, DOWN), FadeIn(light6), FadeOut(light7), run_time=0.5)
        self.play(mania3.animate.next_to(maniaclick5, DOWN), FadeIn(light5), FadeOut(light6), run_time=0.5)
        self.play(mania4.animate.next_to(maniaclick3, DOWN), FadeIn(light3), FadeOut(light5), run_time=0.5)
        self.play(mania5.animate.next_to(maniaclick1, DOWN), FadeIn(light1), FadeOut(light3), run_time=0.5)
        self.play(mania6.animate.next_to(maniaclick4, DOWN), FadeIn(light4), FadeOut(light1), run_time=0.5)
        self.play(mania7.animate.next_to(maniaclick6, DOWN), FadeIn(light6), FadeOut(light4), run_time=0.5)
        self.play(mania8.animate.next_to(maniaclick5, DOWN), FadeIn(light5), FadeOut(light6), run_time=0.5)
        self.play(mania9.animate.next_to(maniaclick4, DOWN), FadeIn(light4), FadeOut(light5), run_time=0.5)
        self.play(mania10.animate.next_to(maniaclick7, DOWN), FadeIn(light7), FadeOut(light4), run_time=0.5)
        self.play(mania11.animate.next_to(maniaclick2, DOWN), FadeIn(light2), FadeOut(light7), run_time=0.5)
        self.play(mania12.animate.next_to(maniaclick1, DOWN), FadeIn(light1), FadeOut(light2), run_time=0.5)
        self.play(mania13.animate.next_to(maniaclick5, DOWN), FadeIn(light5), FadeOut(light1), run_time=0.5)
        self.play(mania14.animate.next_to(maniaclick2, DOWN), FadeIn(light2), FadeOut(light5), run_time=0.5)
        self.play(FadeOut(light2), run_time=0.5)
        self.wait(2)
        self.play(FadeOut(line4, line5))
        self.play(maniaclick1.animate.shift(RIGHT*3), maniaclick2.animate.shift(RIGHT*2), maniaclick3.animate.shift(RIGHT), maniaclick5.animate.shift(LEFT), maniaclick6.animate.shift(LEFT*2), maniaclick7.animate.shift(LEFT*3))
        self.play(maniaclick1.animate.shift(DOWN*3), maniaclick2.animate.shift(DOWN*3), maniaclick3.animate.shift(DOWN*3), maniaclick4.animate.shift(DOWN*3), maniaclick5.animate.shift(DOWN*3), maniaclick6.animate.shift(DOWN*3), maniaclick7.animate.shift(DOWN*3))
        self.play(FadeIn(text))
        self.wait(3)